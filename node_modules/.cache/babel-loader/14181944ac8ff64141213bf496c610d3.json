{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\react-HW-01\\\\src\\\\components\\\\FriendList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendListItem = _ref => {\n  let {\n    avatar,\n    name,\n    isOnline\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `status ${isOnline ? 'online' : 'offline'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"avatar\",\n      src: avatar,\n      alt: \"User avatar\",\n      width: \"48\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n\n_c = FriendListItem;\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired\n}; // Компонент FriendList\n\nconst FriendList = _ref2 => {\n  let {\n    friends\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"friend-list\",\n    children: friends.map(friend => /*#__PURE__*/_jsxDEV(FriendListItem, { ...friend\n    }, friend.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n  })).isRequired\n}; // Приклад використання\n\nconst App = () => /*#__PURE__*/_jsxDEV(FriendList, {\n  friends: friends\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 19\n}, this);\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FriendListItem\");\n$RefreshReg$(_c2, \"FriendList\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["D:/GitHub/react-HW-01/src/components/FriendList.jsx"],"names":["React","PropTypes","FriendListItem","avatar","name","isOnline","propTypes","string","isRequired","bool","FriendList","friends","map","friend","id","arrayOf","shape","number","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,cAAc,GAAG;AAAA,MAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,GAAD;AAAA,sBACrB;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,4BACE;AAAM,MAAA,SAAS,EAAG,UAASA,QAAQ,GAAG,QAAH,GAAc,SAAU;AAA3D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAEF,MAA7B;AAAqC,MAAA,GAAG,EAAC,aAAzC;AAAuD,MAAA,KAAK,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,gBAAqBC;AAArB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADqB;AAAA,CAAvB;;KAAMF,c;AAQNA,cAAc,CAACI,SAAf,GAA2B;AACzBH,EAAAA,MAAM,EAAEF,SAAS,CAACM,MAAV,CAAiBC,UADA;AAEzBJ,EAAAA,IAAI,EAAEH,SAAS,CAACM,MAAV,CAAiBC,UAFE;AAGzBH,EAAAA,QAAQ,EAAEJ,SAAS,CAACQ,IAAV,CAAeD;AAHA,CAA3B,C,CAMA;;AACA,MAAME,UAAU,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACjB;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA,cACGA,OAAO,CAACC,GAAR,CAAaC,MAAD,iBACX,QAAC,cAAD,OAAoCA;AAApC,OAAqBA,MAAM,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,CAAnB;;MAAMJ,U;AAQNA,UAAU,CAACJ,SAAX,GAAuB;AACrBK,EAAAA,OAAO,EAAEV,SAAS,CAACc,OAAV,CACPd,SAAS,CAACe,KAAV,CAAgB;AACdF,IAAAA,EAAE,EAAEb,SAAS,CAACgB,MAAV,CAAiBT,UADP;AAEdL,IAAAA,MAAM,EAAEF,SAAS,CAACM,MAAV,CAAiBC,UAFX;AAGdJ,IAAAA,IAAI,EAAEH,SAAS,CAACM,MAAV,CAAiBC,UAHT;AAIdH,IAAAA,QAAQ,EAAEJ,SAAS,CAACQ,IAAV,CAAeD;AAJX,GAAhB,CADO,EAOPA;AARmB,CAAvB,C,CAWA;;AACA,MAAMU,GAAG,GAAG,mBAAM,QAAC,UAAD;AAAY,EAAA,OAAO,EAAEP;AAArB;AAAA;AAAA;AAAA;AAAA,QAAlB;;MAAMO,G;AAEN,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => (\r\n  <li className=\"item\">\r\n    <span className={`status ${isOnline ? 'online' : 'offline'}`}></span>\r\n    <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\r\n    <p className=\"name\">{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\n// Компонент FriendList\r\nconst FriendList = ({ friends }) => (\r\n  <ul className=\"friend-list\">\r\n    {friends.map((friend) => (\r\n      <FriendListItem key={friend.id} {...friend} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\n// Приклад використання\r\nconst App = () => <FriendList friends={friends} />;\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}