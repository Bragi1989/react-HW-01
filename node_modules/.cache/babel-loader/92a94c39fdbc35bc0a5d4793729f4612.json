{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\react-HW-01\\\\src\\\\components\\\\FriendList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles['friend-list'],\n      children: friends.map(friend => /*#__PURE__*/_jsxDEV(FriendListItem, { ...friend\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n  })).isRequired\n};\nexport default FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["D:/GitHub/react-HW-01/src/components/FriendList.jsx"],"names":["React","PropTypes","FriendListItem","styles","FriendList","friends","map","friend","id","propTypes","arrayOf","shape","number","isRequired","avatar","string","name","isOnline","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,MAAMC,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAClC,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACA;AAAI,MAAA,SAAS,EAAEF,MAAM,CAAC,aAAD,CAArB;AAAA,gBACGE,OAAO,CAACC,GAAR,CAAaC,MAAD,iBACX,QAAC,cAAD,OAAoCA;AAApC,SAAqBA,MAAM,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;KAAMJ,U;AAYNA,UAAU,CAACK,SAAX,GAAuB;AACrBJ,EAAAA,OAAO,EAAEJ,SAAS,CAACS,OAAV,CACPT,SAAS,CAACU,KAAV,CAAgB;AACdH,IAAAA,EAAE,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UADP;AAEdC,IAAAA,MAAM,EAAEb,SAAS,CAACc,MAAV,CAAiBF,UAFX;AAGdG,IAAAA,IAAI,EAAEf,SAAS,CAACc,MAAV,CAAiBF,UAHT;AAIdI,IAAAA,QAAQ,EAAEhB,SAAS,CAACiB,IAAV,CAAeL;AAJX,GAAhB,CADO,EAOPA;AARmB,CAAvB;AAWA,eAAeT,UAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <div className='section-container'>\r\n    <ul className={styles['friend-list']}>\r\n      {friends.map((friend) => (\r\n        <FriendListItem key={friend.id} {...friend} />\r\n      ))}\r\n    </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;"]},"metadata":{},"sourceType":"module"}